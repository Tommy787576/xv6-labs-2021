1. Which registers contain arguments to functions? For example, which register 
holds 13 in main's call to printf?

If we refer to "RISC-V calling convention register usage", a2-a7 is for 
function arguments. a0-a1 is for function arguments/return values. For 
example, a2 holds 13 in main's call to printf.

2. Where is the call to function f in the assembly code for main? Where is 
the call to g? (Hint: the compiler may inline functions.)

26 => inline li, a1, 12 for function f in main
14 => inline addiw a0, a0, 3 for function g in f
f is inlined in the main function and g is inlined in the f function. There's
no explicit function calls.

3. At what address is the function printf located?

0x0000000000000630

4. What value is in the register ra just after the jalr to printf in main?

ra should be 38 which is the next line where we call printf.

5. What is the output? The output depends on that fact that the RISC-V is 
little-endian. If the RISC-V were instead big-endian what would you set i 
to in order to yield the same output? Would you need to change 57616 to a 
different value?

HE110 World. We should set i as 0x726c6400 if the RISC-V were instead big-
endian. No, we wouldn't need to change 57616.

In the following code, what is going to be printed after 'y='? (note: the 
answer is not a specific value.) Why does this happen?

y=1. a1 is set as 3 so x=3, but a2 is not set. Therefore, the random value
will be in a2 and printed out. This is an undefined behavior.